#filter-by-text-wrapper
	%h2.filter-by-text Filter by:
#filter-options-wrapper
	#regions-wrapper
		= form_with url: filter_dashboard_events_path, method: :get do |f|
			= f.select :region_id, options_for_select(Region.all.collect{|region| [region.name, region.id]}, params[:region_id].present? ? [Region.find(params[:region_id]).name, params[:region_id]] : nil), {prompt: 'Region'}, class: ('selected-region' if params[:region_id].present?), 'data-remote' => true, onchange: 'this.form.submit();'
	#past-events-wrapper
		= form_with url: filter_dashboard_events_path, method: :get do |f|
			= hidden_field_tag :past_events, true
			.event-type#past-events.show-for-medium{onclick: "$(this).closest('form').submit()", class: ('selected-filter' if params[:past_events])}
				Past Events
			.event-type#past-events.show-for-small-only{onclick: "$(this).closest('form').submit()", class: ('selected-filter' if params[:past_events])}
				Past
	#upcoming-events-wrapper
		= form_with url: filter_dashboard_events_path, method: :get do |f|
			= hidden_field_tag :upcoming_events, true
			.event-type#upcoming-events.show-for-large{onclick: "$(this).closest('form').submit()", class: ('selected-filter' if params[:upcoming_events])}
				Upcoming Events
			.event-type#upcoming-events.hide-for-large{onclick: "$(this).closest('form').submit()", class: ('selected-filter' if params[:upcoming_events])}
				Upcoming
	#my-events-wrapper
		= form_with url: filter_dashboard_events_path, method: :get do |f|
			= hidden_field_tag :my_events, true
			.event-type#my-events.show-for-medium{onclick: "$(this).closest('form').submit()", class: ('selected-filter' if params[:my_events])}
				My Events
	#clear-filters-wrapper
		= form_with url: filter_dashboard_events_path, method: :get do |f|
			= hidden_field_tag :clear_filters, true
			#clear-filters.show-for-medium{onclick: "$(this).closest('form').submit()"}
				Clear Filters
			#clear-filters.show-for-small-only{onclick: "$(this).closest('form').submit()"}
				Clear